{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","data","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","ALPHABET","LENGTH","value","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAKMC,EAjCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQT,GACN,IAAK,OAML,QACE,OAAO,EALT,IAAK,WACH,OAAOQ,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,WAMtBT,GACFI,EAAaM,UAGRN,EAUMO,CACXjB,EAAiB,CAAEI,WAAUE,eAG/B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAyB,aAAbhB,IAGlBiB,QAAS,WACPhB,EAAYN,EAASuB,WATzB,iCAeA,wBACEH,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAyB,WAAbhB,IAGlBiB,QAAS,WACPhB,EAAYN,EAASwB,SATzB,4BAeA,wBACEJ,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAAad,IAGnBe,QAAS,WAhDfd,GAAc,SAAAiB,GAAK,OAAKA,MAwCpB,sBAgBgB,SAAbpB,GAAuBE,IAEpB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAYN,EAASI,MACrBI,GAAc,IALlB,sBAcR,6BACGC,EAAKiB,KAAI,SAACC,GAAD,OACR,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a35bbe50.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 'none':\n        return 0;\n      case 'alphabet':\n        return a.localeCompare(b);\n      case 'length':\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const currentReverse = () => {\n    setIsReversed(value => !value);\n  };\n\n  const data = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortType !== 'alphabet' },\n            )\n          }\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-success',\n              { 'is-light': sortType !== 'length' },\n            )\n          }\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )\n          }\n          onClick={() => {\n            currentReverse();\n          }}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== 'none' || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  setSortType(SortType.NONE);\n                  setIsReversed(false);\n                }}\n              >\n                Reset\n              </button>\n            )\n        }\n      </div>\n\n      <ul>\n        {data.map((item) => (\n          <li\n            data-cy=\"Good\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}